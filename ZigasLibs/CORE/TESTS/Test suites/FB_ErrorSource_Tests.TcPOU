<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <POU Name="FB_ErrorSource_Tests" Id="{6855d925-cd35-00c6-3a17-d11f72133451}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FB_ErrorSource_Tests EXTENDS FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_errorSourceObject	: FB_ErrorSource_ExtensionForTests;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Test01_ErrorProperty();
Test02_ErrorCode();
Test03_ErrorMessage();
Test04_GenericError();]]></ST>
    </Implementation>
    <Method Name="Test01_ErrorProperty" Id="{5494b363-ee3e-0674-0ec7-08e5578d2c84}">
      <Declaration><![CDATA[METHOD Test01_ErrorProperty
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Test01_ErrorProperty');
_errorSourceObject.bError := TRUE;
_errorSourceObject();
AssertTrue(
	Condition := _errorSourceObject.Error,
	Message := 'Error should be TRUE.');	
	
TcUnit.TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test02_ErrorCode" Id="{4d3b42d5-8f2e-0d26-30ee-9fed7ff2bfd9}">
      <Declaration><![CDATA[METHOD Test02_ErrorCode
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Test02_ErrorCode');

_errorSourceObject.eAdsErrorCodeToTest := TcError.AdsErrorCodes.ADSERR_CLIENT_ERROR;
_errorSourceObject();

AssertEquals_UDINT(
	Actual := _errorSourceObject.AdsError.Code,
	Expected := TcError.AdsErrorCodes.ADSERR_CLIENT_ERROR,
	Message := 'The error code provided in the ErrorInfo.Code property is incorrect!');

TcUnit.TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test03_ErrorMessage" Id="{fdbc30ba-557c-09af-2f86-c775709cb0e6}">
      <Declaration><![CDATA[METHOD PRIVATE Test03_ErrorMessage
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Test03_ErrorMessage');

_errorSourceObject.eAdsErrorCodeToTest := TcError.AdsErrorCodes.ADSERR_DEVICE_ABORTED;
_errorSourceObject();

AssertEquals_STRING(
	Actual := _errorSourceObject.AdsError.Message,
	Expected := 'Request is aborted.',
	Message := 'The error information was incorrect!');

TcUnit.TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test04_GenericError" Id="{a23ac5d5-ed2c-0e5f-13d0-fad7abd9db98}">
      <Declaration><![CDATA[METHOD Test04_GenericError
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Test04_GenericError');

_errorSourceObject.nGenericErrorCode := 10;
_errorSourceObject.sGenericErrorMessage := 'Error message, generic...';
_errorSourceObject();
AssertEquals_DINT(
	Expected := 10,
	Actual := _errorSourceObject.GenericError.Code,
	Message := 'Incorrect error code.');
	
AssertEquals_STRING(
	Expected := 'Error message, generic...',
	Actual := _errorSourceObject.GenericError.Message,
	Message := 'Incorrect error message.');
	
TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>