<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <POU Name="FB_Collection" Id="{fe7091af-2a45-068b-0944-794d68a02537}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Collection IMPLEMENTS I_Collection
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_malloc	: FB_Malloc(0,0);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddNew" Id="{120ccdbc-5451-073a-398c-f5cf1132ef2b}">
      <Declaration><![CDATA[// Adds a new item to the collection.
METHOD AddNew
VAR_INPUT
	item	: ANY;	// Item to add to the collection
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Count = 0 THEN
	_malloc.AllocateAny(item,1);
ELSE
	_malloc.Expand(1);
END_IF

_malloc.Set(_malloc.Properties.NumberOfElements - 1, item);


]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{eaaaa2b1-c963-0358-381f-3377ccbfcc14}">
      <Declaration><![CDATA[// Clears the collection
METHOD Clear
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_malloc.Free();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Contains" Id="{5d25a07e-862a-0332-30a3-0fbb2276041b}">
      <Declaration><![CDATA[// Checks if the collecton contains item and returns TRUE if that is the case.
METHOD Contains : BOOL
VAR_INPUT
	item	: ANY;	// Item to search for
END_VAR

VAR
	index	: T_ArrayIndexer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF item.diSize <> _malloc.Properties.BaseTypeSize THEN
	Contains := FALSE;
	RETURN;
END_IF

FOR index := 0 TO _malloc.Properties.NumberOfElements - 1 BY 1 DO
	IF Tc2_System.MEMCMP(
		pBuf1 := item, 
		pBuf2 := _malloc.GetPtr(index), 
		n := DINT_TO_UDINT(_malloc.Properties.BaseTypeSize)) = E_MemCmpResults.IDENTICAL 
	THEN
		Contains := TRUE;
		RETURN;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="Count" Id="{1aaa51af-0215-08ff-0cdc-67249b9252ab}">
      <Declaration><![CDATA[// Gets the item count in the collection.
PROPERTY Count : DINT
]]></Declaration>
      <Get Name="Get" Id="{00ff1418-d5e1-0371-3c52-d970e76d9a10}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Count := _malloc.Properties.NumberOfElements;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Find" Id="{04f8722f-eea5-0936-1f4d-be398d2edd8b}">
      <Declaration><![CDATA[// Finds the first occurance of the item in the element sequence. If item is not found, 0 is returned.
METHOD Find : PVOID
VAR_INPUT
	item	: ANY;	// Item to look for
END_VAR

VAR
	index	: T_ArrayIndexer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF item.diSize <> _malloc.Properties.BaseTypeSize THEN
	Contains := FALSE;
	RETURN;
END_IF

FOR index := 0 TO _malloc.Properties.NumberOfElements - 1 BY 1 DO
	IF Tc2_System.MEMCMP(item, _malloc.GetPtr(index), _malloc.Properties.BaseTypeSize) = E_MemCmpResults.IDENTICAL THEN
		Find := _malloc.GetPtr(index);
		RETURN;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="Remove" Id="{592dd38a-df8c-01c2-2e24-421dcce61952}">
      <Declaration><![CDATA[// Removes first occurenece of the item in the collection.
// Reutrns TRUE if the item was removed, or FALSE if no such item exists.
METHOD Remove	: BOOL
VAR_INPUT
	item	: ANY;	// Item to remove
END_VAR

VAR
	itemPtr	: PVOID;
	index	: DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF item.diSize <> _malloc.Properties.BaseTypeSize OR
   NOT _malloc.IsAllocated 
THEN
	Remove := FALSE;
	RETURN;
END_IF

itemPtr := Find(item);
IF itemPtr = 0 THEN
	Remove := FALSE;
	RETURN;
END_IF

index := 
	((_malloc.Properties.NumberOfElements * _malloc.Properties.BaseTypeSize) + 
	UDINT_TO_DINT(_malloc.Properties.StartAddress)) /
	UDINT_TO_DINT(itemPtr);

Remove := RemoveAt(index);]]></ST>
      </Implementation>
    </Method>
    <Method Name="RemoveAt" Id="{6452a320-da57-0307-1b0a-a65ecd5ef066}">
      <Declaration><![CDATA[// Removes an item from the collection at the provided index.
// Reutrns TRUE if the item was removed, or FALSE if no such item exists.
METHOD RemoveAt : BOOL
VAR_INPUT
	index	: DINT;	// Index at which the item will be removed.
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[RemoveAt := _malloc.Remove(index);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>