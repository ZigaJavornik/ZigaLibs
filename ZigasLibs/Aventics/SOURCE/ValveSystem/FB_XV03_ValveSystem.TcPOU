<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <POU Name="FB_XV03_ValveSystem" Id="{91226653-6c8c-0a95-3c70-9c02864fb572}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_XV03_ValveSystem EXTENDS ZigaLibs_Core.FB_HasAmsAddressFromProcessImage
VAR
	_enable					: BOOL;
	_valves					: T_XV03_ValveSystem;
	_logger					: REFERENCE TO ZigaLibs_Core.I_LoggerEx;
	_diagnosticsOptios		: ST_DiagnosticsOptions;
	_diagnosticsTimer		: Tc2_Standard.TON;
	_init					: BOOL;
END_VAR

VAR
	Coils	AT %Q*			: ST_ValveCoils;
END_VAR

VAR CONSTANT
	MINIMUM_DIAGNOSTICS_PERIOD : TIME := T#1S;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT _enable THEN
	Coils.Coils_01_To_08 := 0;
	Coils.Coils_09_To_16 := 0;
	Coils.Coils_17_To_24 := 0;
	Coils.Coils_25_To_32 := 0;
	Coils.Coils_41_To_48 := 0;
ELSE
	Coils.Coils_01_To_08.0 := _valves[1].Coil_12.Active;
	Coils.Coils_01_To_08.1 := _valves[1].Coil_14.Active;
	Coils.Coils_01_To_08.2 := _valves[2].Coil_12.Active;
	Coils.Coils_01_To_08.3 := _valves[2].Coil_14.Active;
	Coils.Coils_01_To_08.4 := _valves[3].Coil_12.Active;
	Coils.Coils_01_To_08.5 := _valves[3].Coil_14.Active;
	Coils.Coils_01_To_08.6 := _valves[4].Coil_12.Active;
	Coils.Coils_01_To_08.7 := _valves[4].Coil_14.Active;
	Coils.Coils_09_To_16.0 := _valves[5].Coil_12.Active;
	Coils.Coils_09_To_16.1 := _valves[5].Coil_14.Active;
	Coils.Coils_09_To_16.2 := _valves[6].Coil_12.Active;
	Coils.Coils_09_To_16.3 := _valves[6].Coil_14.Active;
	Coils.Coils_09_To_16.4 := _valves[7].Coil_12.Active;
	Coils.Coils_09_To_16.5 := _valves[7].Coil_14.Active;
	Coils.Coils_09_To_16.6 := _valves[8].Coil_12.Active;
	Coils.Coils_09_To_16.7 := _valves[8].Coil_14.Active;
	
	Coils.Coils_17_To_24.0 := _valves[9].Coil_12.Active;
	Coils.Coils_17_To_24.1 := _valves[9].Coil_14.Active;
	Coils.Coils_17_To_24.2 := _valves[10].Coil_12.Active;
	Coils.Coils_17_To_24.3 := _valves[10].Coil_14.Active;
	Coils.Coils_17_To_24.4 := _valves[11].Coil_12.Active;
	Coils.Coils_17_To_24.5 := _valves[11].Coil_14.Active;
	Coils.Coils_17_To_24.6 := _valves[12].Coil_12.Active;
	Coils.Coils_17_To_24.7 := _valves[12].Coil_14.Active;
	
	Coils.Coils_25_To_32.0 := _valves[13].Coil_12.Active; 
	Coils.Coils_25_To_32.1 := _valves[13].Coil_14.Active; 
	Coils.Coils_25_To_32.2 := _valves[14].Coil_12.Active;
	Coils.Coils_25_To_32.3 := _valves[14].Coil_14.Active;
	Coils.Coils_25_To_32.4 := _valves[15].Coil_12.Active;
	Coils.Coils_25_To_32.5 := _valves[15].Coil_14.Active;
	Coils.Coils_25_To_32.6 := _valves[16].Coil_12.Active;
	Coils.Coils_25_To_32.7 := _valves[16].Coil_14.Active;
	                          
	Coils.Coils_33_To_40.0 := _valves[17].Coil_12.Active;
	Coils.Coils_33_To_40.1 := _valves[17].Coil_14.Active;
	Coils.Coils_33_To_40.2 := _valves[18].Coil_12.Active;
	Coils.Coils_33_To_40.3 := _valves[18].Coil_14.Active;
	Coils.Coils_33_To_40.4 := _valves[19].Coil_12.Active;
	Coils.Coils_33_To_40.5 := _valves[19].Coil_14.Active;
	Coils.Coils_33_To_40.6 := _valves[20].Coil_12.Active;
	Coils.Coils_33_To_40.7 := _valves[20].Coil_14.Active;
	
	Coils.Coils_41_To_48.0 := _valves[21].Coil_12.Active; 
	Coils.Coils_41_To_48.1 := _valves[21].Coil_14.Active; 
	Coils.Coils_41_To_48.2 := _valves[22].Coil_12.Active;
	Coils.Coils_41_To_48.3 := _valves[22].Coil_14.Active;
	Coils.Coils_41_To_48.4 := _valves[23].Coil_12.Active;
	Coils.Coils_41_To_48.5 := _valves[23].Coil_14.Active;
	Coils.Coils_41_To_48.6 := _valves[24].Coil_12.Active;
	Coils.Coils_41_To_48.7 := _valves[24].Coil_14.Active;
END_IF


{warning 'To-do - implement diagnostisc via CoE!'}
_diagnosticsTimer(IN := _diagnosticsOptios.Enable, PT := MAX(_diagnosticsOptios.Period, MINIMUM_DIAGNOSTICS_PERIOD));
IF _diagnosticsTimer.Q OR (NOT _init AND _diagnosticsOptios.Enable) THEN
	ExecuteDiagnostics();
END_IF

IF _diagnosticsOptios.Enable = FALSE THEN
	_init := TRUE;
END_IF]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{fbf3e138-dc9d-0690-18c9-49c64d868d46}" />
    <Property Name="DiagnosticsOptions" Id="{db51de8b-ec1e-0acc-2403-44818dab9abf}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
// Gets or sets diagnostics options
PROPERTY DiagnosticsOptions : REFERENCE TO ST_DiagnosticsOptions]]></Declaration>
      <Get Name="Get" Id="{0768f6a3-2af0-06c2-2321-511aff344b8f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[DiagnosticsOptions ref= _diagnosticsOptios;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Enable" Id="{c512ef4d-d80f-0e46-07ce-0a1aa9652c8a}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY Enable : BOOL]]></Declaration>
      <Get Name="Get" Id="{3cafa4b4-2386-0668-2aae-534403fb9031}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Enable := _enable;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{52d2b470-ab81-0a5f-0b39-86de425faea3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_enable := Enable;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="ExecuteDiagnostics" Id="{395c3bfe-ba2c-0fcc-1164-e020a7bcd0ee}">
      <Declaration><![CDATA[METHOD PRIVATE ExecuteDiagnostics : BOOL
VAR_INPUT
END_VAR

VAR_INST
	fbCoeReadWrite	: ZigaLibs_Core.FB_CoeReadWrite;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// TO-DO IMPLEMENT!
(*
	fbCoeReadWrite.ReadAny(
		SlaveAddr := THIS^.Ams,
		);
	...
*)

_init := TRUE;
_diagnosticsTimer(IN := FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{f654966f-edd8-0ce3-3916-2729a239334c}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	logger		: REFERENCE TO ZigaLibs_Core.I_LoggerEx;	// If logging will be used, provide it here. Else set this to 0, internal checks will ommit logging.
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __ISVALIDREF(logger) THEN
	_logger REF= logger;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Valves" Id="{f4dc996d-d5f6-0d6e-0fad-1e0a414a6188}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY Valves : REFERENCE TO T_XV03_ValveSystem]]></Declaration>
      <Get Name="Get" Id="{fd2caa83-0f88-01d3-349d-2878bf8d5503}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Valves REF= _valves;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>